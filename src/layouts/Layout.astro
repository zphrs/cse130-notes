---
import { ViewTransitions } from "astro:transitions"
interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <ViewTransitions />
    <link rel='preconnect' href='https://fonts.googleapis.com' />
    <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
    <link
      rel='preload'
      href='https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&family=Comfortaa:wght@700&family=Fira+Code&display=swap'
      as='style'
      onload="this.onload=null;this.rel='stylesheet'"
    />
    <noscript
      ><link
        rel='stylesheet'
        href='https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:ital,wght@0,400;0,700;1,400;1,700&family=Comfortaa:wght@700&family=Fira+Code&display=swap'
      /></noscript
    >
    <title>{title}</title>
  </head>
  <body>
    <script>
      import type { TransitionBeforePreparationEvent } from "astro/virtual-modules/transitions-events.js"
      document.addEventListener("astro:before-preparation", ev => {
        const event = ev as TransitionBeforePreparationEvent
        if (!event.from.pathname.startsWith("/notes")) {
          return
        }
        if (event.from.pathname.endsWith("notes/")) {
          event.preventDefault()
          return
        }
        if (event.to.pathname.endsWith("notes/")) {
          return
        }
        if (!event.sourceElement) {
          return
        }
        switch (event.sourceElement.className) {
          case "next":
            event.direction = "forward"
            break
          case "prev":
            event.direction = "back"
            break
          default:
            break
        }
      })
    </script>
    <slot />
    <style is:global>
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-family: "Comfortaa", sans-serif;
        color: var(--seafoam-70);
        margin: 0;
        padding-bottom: 1rem;
      }

      p {
        margin: 0;
        line-height: 1.5;
        padding-bottom: 1rem;
      }

      h1 {
        color: var(--violet-80);
      }
      h2 {
        color: var(--seafoam-80);
      }
      h3 {
        color: var(--seafoam-70);
      }
      h4 {
        color: var(--seafoam-60);
      }

      body {
        font-family:
          "Atkinson Hyperlegible",
          system-ui,
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          "Open Sans",
          "Helvetica Neue",
          sans-serif;
        font-size: 18px;
      }
      a {
        color: var(--violet-70);
        text-decoration: none;
      }
      a:hover {
        text-decoration: underline;
      }
      main {
        max-width: 800px;
        margin: 0 auto;
        background-color: var(--gray-5);
        color: var(--gray-95);
        padding: 1rem;
      }
      :target {
        padding: 1rem 0.5rem;
        background-color: var(--seafoam-10);
        outline: 1px solid currentColor;
        border-radius: 0.25rem;
      }
    </style>
  </body>
</html>
