---
interface Props {
  desc: string
  href: string
  title: string
}

const { desc, href, title } = Astro.props
const lines = desc.split("\n")
---

<script>
  const links = document.querySelectorAll("a.header-preview")
  links.forEach(link => {
    link.addEventListener("click", e => {
      if (!link.classList.contains("visible")) {
        e.preventDefault()
        link.classList.add("visible")
        // add pointerleave event to remove the visible class
        window.addEventListener(
          "pointerout",
          e => {
            if (e.target === link) return
            setTimeout(() => {
              link.classList.remove("visible")
            }, 100)
          },
          { once: true }
        )
        // stop propagation of the click event
        e.stopPropagation()
      }
    })
  })
  // toggle the class on hover
  links.forEach(link => {
    link.addEventListener("pointerover", ev => {
      const e = ev as PointerEvent
      if (e.pointerType === "mouse") link.classList.add("visible")
    })
    link.addEventListener("pointerout", ev => {
      const e = ev as PointerEvent
      if (e.pointerType === "mouse") link.classList.remove("visible")
    })
  })
  const buttons = document.querySelectorAll("a.header-preview button")
  buttons.forEach(button => {
    button.addEventListener("click", e => {
      e.preventDefault()
      const link = button.closest("a.header-preview")
      link!.classList.remove("visible")
      // add class close
      link!.classList.add("close")
      // listen to pointerout events to remove the close class
      link!.addEventListener(
        "pointerleave",
        () => {
          link!.classList.remove("close")
        },
        { once: true }
      )
    })
  })
</script>

<a {href} class='header-preview'>
  <span><slot /></span>
  <span class='desc'>
    <button>âœ•</button>
    <header>{title}</header>
    {desc && <hr />}
    {desc && lines.map(line => (line ? <p>{line}</p> : ""))}
  </span>

  <style>
    a {
      display: inline-flex;
      flex-direction: column;
      align-items: center;
      text-decoration: none;
      color: inherit;
      position: relative;
    }

    p {
      padding-bottom: 0.5rem;
      margin-right: -1.25rem;
    }

    p:last-child {
      padding-bottom: 0;
    }

    a {
      padding: 0.2rem 0.5rem;
      border: 1px solid var(--seafoam-50);
      border-radius: 0.25rem;
    }

    a:hover {
      text-decoration: underline;
    }

    span {
      display: block;
    }

    .desc header {
      background-color: var(--gray-10);
      position: sticky;
      top: -0.25rem;
      padding: 0;
      padding-bottom: 1rem;
      font-weight: bold;
      font-size: 1.1em;
      padding-bottom: 0.25rem;
      padding-top: 0.25rem;
    }

    hr {
      margin: 0;
      position: sticky;
      top: 1.25rem;
      border: 1px solid var(--seafoam-50);
      margin-top: 0.25rem;
      margin-right: -1.25rem;
    }

    button {
      position: absolute;
      top: 0.25rem;
      right: 0.25rem;
      background-color: var(--gray-10);
      border: 1px solid var(--gray-50);
      border-radius: 0.25rem;
      padding: 0.25rem;
      font-size: 0.8em;
      cursor: pointer;
      z-index: 2;
    }

    a.close button {
      display: none;
    }

    .desc {
      width: max(13rem, 100%);
      max-height: 40vh;
      overflow: scroll;
      padding: 0.25rem;
      border-radius: 0.25rem;
      font-size: 0.8em;
      background-color: var(--gray-10);
      border: 1px solid var(--gray-50);
      transform: scale(0.7);
      position: absolute;
      top: -0.1rem;
      left: -0.1rem;
      white-space: normal;
      opacity: 0;
      z-index: 1;
      transition:
        transform 0.2s ease,
        opacity 0.2s ease-in-out;
      transform-origin: 10% 0%;
      pointer-events: none;
      padding-right: 1.5rem;
    }
    a:hover .desc,
    a.visible .desc {
      transform: scale(1);
      opacity: 1;
      pointer-events: all;
    }
    a:hover.close .desc {
      transform: scale(0.7);
      opacity: 0;
      pointer-events: none;
    }
  </style>
</a>
