---
interface Props {
  desc: string
  href: string
  title: string
}

const { desc, href, title } = Astro.props
const lines = desc.split("\n")
---

<a {href}>
  <span><slot /></span>
  <span class='desc'>
    <header>{title}</header>
    {desc && <hr />}
    {desc && lines.map(line => (line ? <p>{line}</p> : ""))}
  </span>

  <style>
    a {
      display: inline-flex;
      flex-direction: column;
      align-items: center;
      text-decoration: none;
      color: inherit;
      position: relative;
    }

    p {
      padding-bottom: 0.5rem;
    }

    p:last-child {
      padding-bottom: 0;
    }

    a {
      padding: 0.2rem 0.5rem;
      border: 1px solid var(--seafoam-50);
      border-radius: 0.25rem;
    }

    a:hover {
      text-decoration: underline;
    }

    span {
      display: block;
    }

    .desc header {
      background-color: var(--gray-10);
      position: sticky;
      top: -0.25rem;
      padding: 0;
      padding-bottom: 1rem;
      font-weight: bold;
      font-size: 1.1em;
      padding-bottom: 0.25rem;
      padding-top: 0.25rem;
    }

    hr {
      margin: 0;
      position: sticky;
      top: 1.25rem;
      border: 1px solid var(--seafoam-50);
      margin-top: 0.25rem;
    }

    .desc {
      width: max(13rem, 100%);
      max-height: 40vh;
      overflow: scroll;
      padding: 0.25rem;
      border-radius: 0.25rem;
      font-size: 0.8em;
      background-color: var(--gray-10);
      border: 1px solid var(--gray-50);
      transform: scale(0.7);
      position: absolute;
      top: -0.1rem;
      left: -0.1rem;
      white-space: normal;
      opacity: 0;
      z-index: 1;
      transition:
        transform 0.2s ease,
        opacity 0.2s ease-in-out;
      transform-origin: 10% 0%;
      pointer-events: none;
    }
    a:hover .desc {
      transform: scale(1);
      opacity: 1;
      pointer-events: all;
    }
  </style>
</a>
